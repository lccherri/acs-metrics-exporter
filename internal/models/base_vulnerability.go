package models

// BaseVulnerability contains common fields (pointers for nullable JSON)
type BaseVulnerability struct {
	CreatedAt         *string  `json:"createdAt"`
	CVE               string   `json:"cve"`
	Severity          string   `json:"severity"`
	CVSS              *float64 `json:"cvss"`
	ImpactScore       *float64 `json:"impactScore"`
	EnvImpact         *float64 `json:"envImpact"`
	FixedBy           string   `json:"fixedByVersion"`
	ID                string   `json:"id"`
	IsFixable         bool     `json:"isFixable"`
	LastModified      *string  `json:"lastModified"`
	LastScanned       *string  `json:"lastScanned"`
	Link              string   `json:"link"`
	PublishedOn       *string  `json:"publishedOn"`
	ScoreVersion      string   `json:"scoreVersion"`
	Summary           string   `json:"summary"`
	SuppressActivation *string `json:"suppressActivation"`
	SuppressExpiry     *string `json:"suppressExpiry"`
	Suppressed         bool    `json:"suppressed"`
}

// VulnerabilityBase minimal interface used by collector
type VulnerabilityBase interface {
	GetCVE() string
	GetSeverity() string
	GetCVSS() float64
	GetImpactScore() float64
	GetEnvImpact() float64
	GetFixedBy() string
	GetLink() string
	GetScoreVersion() string
	GetPublishedOn() string
	GetLastModified() string
	GetLastScanned() string
}

// Implement interface methods on BaseVulnerability

func (v BaseVulnerability) GetCVE() string { return v.CVE }
func (v BaseVulnerability) GetSeverity() string { return v.Severity }

func (v BaseVulnerability) GetCVSS() float64 {
	if v.CVSS == nil {
		return 0.0
	}
	return *v.CVSS
}

func (v BaseVulnerability) GetImpactScore() float64 {
	if v.ImpactScore == nil {
		return 0.0
	}
	return *v.ImpactScore
}

func (v BaseVulnerability) GetEnvImpact() float64 {
	if v.EnvImpact == nil {
		return 0.0
	}
	return *v.EnvImpact
}

func (v BaseVulnerability) GetFixedBy() string { return v.FixedBy }
func (v BaseVulnerability) GetLink() string { return v.Link }
func (v BaseVulnerability) GetScoreVersion() string { return v.ScoreVersion }

func (v BaseVulnerability) GetPublishedOn() string {
	if v.PublishedOn == nil {
		return ""
	}
	return *v.PublishedOn
}

func (v BaseVulnerability) GetLastModified() string {
	if v.LastModified == nil {
		return ""
	}
	return *v.LastModified
}

func (v BaseVulnerability) GetLastScanned() string {
	if v.LastScanned == nil {
		return ""
	}
	return *v.LastScanned
}
